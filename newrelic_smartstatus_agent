#! /usr/bin/env ruby

require "rubygems"
require "bundler/setup"

require "newrelic_plugin"
require "smart_status"

module SMARTStatusAgent

  class Agent < NewRelic::Plugin::Agent::Base

    agent_guid "com.erthad.smartstatus"
    agent_version "1.0.1"
    agent_config_options :hostname, :drives, :report_old_age
    agent_human_labels("S.M.A.R.T. status") { hostname.to_s }

    def setup_metrics
      @drive_processor = {}
      drives.each do |drive|
        @drive_processor[drive] = SMARTStatus::Parser.new(drive)
      end
    end

    def poll_cycle
      drives.each do |drive|
        @drive_processor[drive].process.each do |metric,data|
          if report_old_age || !data.old_age?
            report_metric format_metric_name(drive,data.formatted_name), data.unit, data.value
          end
        end
      end
    end

  private

    def format_metric_name(drive,metric_name)
      drive = drive.gsub( /\/dev\//,'')
      "S.M.A.R.T/#{metric_name}/#{drive}"
    end
  end

  #
  # Register this agent with the component.
  # The SMARTStatusAgent is the name of the module that defines this
  # driver (the module must contain at least three classes - a
  # PollCycle, a Metric and an Agent class, as defined above).
  #
  NewRelic::Plugin::Setup.install_agent :smartstatus, SMARTStatusAgent

  #
  # Launch the agent; this never returns.
  #
  NewRelic::Plugin::Run.setup_and_run

end
